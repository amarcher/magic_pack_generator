@keyframes driftY {
   from { transform: translateY(0px); }
   to { transform: translateY(-1000px); }
}

/* Firefox */
@-moz-keyframes driftY {
   from { -moz-transform: translateY(0px); }
   to { -moz-transform: translateY(-1000px); }
}
/* WebKit - Chrome and Safari */
@-webkit-keyframes driftY {
   from { -webkit-transform: translateY(0px); }
   to { -webkit-transform: translateY(-1000px); }
} 
/* Opera */
@-o-keyframes driftY {
   from { -o-transform: translateY(0px); }
   to { -o-transform: translateY(-1000px); }
}

.driftUp {
  position: absolute;
  /* Firefox */
  -moz-animation: driftY linear infinite alternate;
  /* WebKit - Chrome and Safari */
  -webkit-animation: driftY linear infinite alternate;
  /* Opera */
  -o-animation: driftY linear infinite alternate;
  /* general syntax */
  animation: driftY linear infinite alternate;

  /* Firefox */
  -moz-animation-duration: 60s;
  /* WebKit - Chrome and Safari */
  -webkit-animation-duration: 60s;
  /* Opera */
  -o-animation-duration: 60s;
  /* general syntax */
  animation-duration: 60s;
}


.animate-repeat {
  list-style:none;
  box-sizing:border-box;
}

.animate-repeat.ng-move,
.animate-repeat.ng-enter,
.animate-repeat.ng-leave {
  -webkit-transition:all linear $time;
  transition:all linear $time;
}

.animate-repeat.ng-leave.ng-leave-active,
.animate-repeat.ng-move,
.animate-repeat.ng-enter {
  opacity:0;
}

.animate-repeat.ng-leave,
.animate-repeat.ng-move.ng-move-active,
.animate-repeat.ng-enter.ng-enter-active {
  opacity:1;
}

/*
	See: https://docs.angularjs.org/guide/animations
  We're using CSS transitions for when
  the enter and move events are triggered
  for the element that has the .fade
  class
*/
.fade.ng-enter, .fade.ng-move {
  -webkit-transition:$time linear all;
  -moz-transition:$time linear all;
  -o-transition:$time linear all;
  transition:$time linear all;
  opacity:0;
}

/*
 The ng-enter-active and ng-move-active
 are where the transition destination properties
 are set so that the animation knows what to
 animate.
*/
.fade.ng-enter.ng-enter-active,
.fade.ng-move.ng-move-active {
  opacity:1;
}

/*
  We're using CSS keyframe animations for when
  the leave event is triggered for the element
  that has the .fade class
*/
.fade.ng-leave {
  -webkit-animation:$time my_animation;
  -moz-animation:$time my_animation;
  -o-animation:$time my_animation;
  animation:$time my_animation;
}

@keyframes my_animation {
  from { opacity:1; }
  to { opacity:0; }
}

/*
  Unfortunately each browser vendor requires
  its own definition of keyframe animation code...
*/
@-webkit-keyframes my_animation {
  from { opacity:1; }
  to { opacity:0; }
}

@-moz-keyframes my_animation {
  from { opacity:1; }
  to { opacity:0; }
}

@-o-keyframes my_animation {
  from { opacity:1; }
  to { opacity:0; }
}
.backdrop.appear {
  opacity: .7;
}

.box.appear {
  opacity: 1;
}

.backdrop.appear-add {
  -webkit-animation: 1s backdropAppearance;
  animation: 1s backdropAppearance;
}

@keyframes backdropAppearance {
  from {
    opacity: 0;
  }
  to {
    opacity: .7;
  }
}

.box.appear-add {
  -webkit-animation: 1s boxAppearance;
  animation: 1s boxAppearance;
}

@keyframes boxAppearance {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
.backdrop.appear-remove {
  -webkit-animation: 1s backdropOutAppearance;
  animation: 1s backdropOutAppearance;
}

@keyframes backdropOutAppearance {
  from {
    opacity: .7;
  }
  to {
    opacity: 0;
  }
}

.box.appear-remove {
  -webkit-animation: 1s boxOutAppearance;
  animation: 1s boxOutAppearance;
}

@keyframes boxOutAppearance {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

.css-class-remove.css-class-remove-active {
  font-size:1.0em;
  color:black;
}

.tweetstack.ng-enter,
.tweetstack.ng-leave {
  -webkit-transition: 0.5s;
  transition: 0.5s;
}

.tweet_card.ng-leave {
  -webkit-animation-name:bounceOutDown;
    -moz-animation-name:bounceOutDown;
  -o-animation-name:bounceOutDown;
  animation-name:bounceOutDown;
}

.fuse {
  
}
